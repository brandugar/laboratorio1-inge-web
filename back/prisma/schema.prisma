// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model IssueComment {
  id        String @id @default(cuid()) 
  comment   String
  userId    String
  createdBy User   @relation("UserComments", fields: [userId], references: [id])
  issueId   String
  issue     Issue  @relation("IssueComments", fields: [issueId], references: [id])
}

model Project {
  id                 String     @id @default(cuid())
  name               String
  description        String
  clientEnterpriseId String
  clientEnterprise   Enterprise @relation(fields: [clientEnterpriseId], references: [id])
  developers         User[]
  clients            User[]     @relation("Clients")
  Issue              Issue[]    @relation("ProjectIssue")
}

model Enterprise {
  id       String    @id @default(cuid())
  name     String
  projects Project[]
  users    User[]
}

enum Enum_Role {
  Administrador
  Desarrollador
  Client
}

model User {
  id           String         @id @default(cuid())
  email        String         @unique
  enterpriseId String         
  enterprise   Enterprise     @relation(fields: [enterpriseId], references: [id])
  role         Enum_Role
  comments     IssueComment[] @relation("UserComments")
  projectDev   Project[]
  projectClt   Project[]      @relation("Clients")
  Issue        Issue[]        @relation("UserIssue")
}

enum Enum_IssueType {
  MissingTask
  Bug
  Additional
}

enum Enum_IssuePriority {
  Low
  Medium
  High
}

enum Enum_IssueStatus {
  NotAssigned
  Assigned
  Estimated
  InternalValidation
  ClientValidation
  Closed
  Abandoned
}

model Issue {
  id           String             @unique
  description  String
  category     Enum_IssueType
  priority     Enum_IssuePriority
  status       Enum_IssueStatus
  hourEstimate Int
  userId       String
  developer    User               @relation("UserIssue", fields: [userId], references: [id])
  comments     IssueComment[]     @relation("IssueComments")
  dueDate      DateTime
  closeDate    DateTime
  projectId    String
  project      Project            @relation("ProjectIssue", fields: [projectId], references: [id])
}
